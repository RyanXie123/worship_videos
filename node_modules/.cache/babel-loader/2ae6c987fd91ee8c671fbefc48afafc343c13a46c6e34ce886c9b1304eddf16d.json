{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8ef35988\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"video-player\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"video\", {\n    src: $data.videoUrl,\n    controls: \"\",\n    autoplay: \"\"\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","src","$data","videoUrl","controls","autoplay","_hoisted_2"],"sources":["/home/worship_video/src/components/VideoPlayer.vue"],"sourcesContent":["<template>\n    <div class=\"video-player\">\n        <video :src=\"videoUrl\" controls autoplay></video>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            videoUrl: '', // 视频的URL\n            video: null, // 视频对象\n        };\n    },\n    mounted() {\n        // 在组件挂载后，解析视频信息并获取视频的URL\n        this.parseVideoInfo();\n\n    },\n    methods: {\n        parseVideoInfo() {\n            // 解析视频信息\n            const videoData = this.$route.params.video;\n            this.video = JSON.parse(videoData);\n            this.videoUrl = this.video.videoUrl;\n        },\n\n    },\n};\n</script>\n\n<style scoped>\n.video-player {\n    /* 可根据需要设置视频播放器的样式 */\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAc;mBAD7B;;uBACIC,mBAAA,CAEM,OAFNC,UAEM,GADFC,mBAAA,CAAiD;IAAzCC,GAAG,EAAEC,KAAA,CAAAC,QAAQ;IAAEC,QAAQ,EAAR,EAAQ;IAACC,QAAQ,EAAR;0BAFxCC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}